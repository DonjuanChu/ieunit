<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.3" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>False</SharedProject>
  <Stylesheet Apply="False">c:\program files\microsoft fxcop 1.30\Xml\FxCopReport.Xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="False" />
  <PermitAnalysis>True</PermitAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>100</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>10</RuleExceptionsThreshold>
  <Spelling Locale="en-us" />
 </ProjectOptions>
 <Targets>
  <Target Name="C:\dev\IeUnit\tool\Win32Dom\Release\Win32Dom.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\ComRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.3" LastAnalysis="2005-02-21 05:18:57Z">
  <Targets>
   <Target Name="C:\dev\IeUnit\tool\Win32Dom\Release\Win32Dom.dll">
    <Messages>
     <Message Status="Active" Created="2005-02-21 05:18:57Z">
      <Rule TypeName="AssembliesShouldBeComVisibleAttributed" />
      <Issues>
       <Issue Certainty="99" Level="Error">
        <Resolution>
         <Data>
          <Id>AttributeTrue</Id>
          <Items>
           <Item>Win32Dom</Item>
          </Items>
         </Data>
        </Resolution>
       </Issue>
      </Issues>
     </Message>
    </Messages>
    <Modules>
     <Module Name="win32dom.dll">
      <Namespaces>
       <Namespace Name="Win32Dom">
        <Classes>
         <Class Name="Win32Api">
          <Methods>
           <Method Name="FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String):System.IntPtr">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="AvoidBuildingNonCallableCode" />
              <Issues>
               <Issue Certainty="75" Level="Warning">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Win32Dom.Win32Api.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="FindWindowEx_(System.IntPtr,System.IntPtr,System.String,System.String):System.Int32">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="AvoidBuildingNonCallableCode" />
              <Issues>
               <Issue Certainty="75" Level="Warning">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Win32Dom.Win32Api.FindWindowEx_(System.IntPtr,System.IntPtr,System.String,System.String)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
          </Methods>
         </Class>
         <Class Name="Button">
          <Methods>
           <Method Name="click():System.Void">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>click</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
          </Methods>
         </Class>
         <Class Name="Window">
          <Messages>
           <Message Status="Active" Created="2005-02-21 05:18:57Z">
            <Rule TypeName="TypesAllocatingUnmanagedResourcesImplementIDisposable" />
            <Issues>
             <Issue Certainty="50" Level="CriticalError">
              <Resolution>
               <Data>
                <Items>
                 <Item>winHandle</Item>
                 <Item>IntPtr</Item>
                </Items>
               </Data>
              </Resolution>
             </Issue>
            </Issues>
           </Message>
          </Messages>
          <Fields>
           <Field Name="xmlElement">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="TypesDoNotHavePublicInstanceFields" />
              <Issues>
               <Issue Certainty="90" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>xmlElement</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Field>
           <Field Name="winHandle">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="TypesDoNotHavePublicInstanceFields" />
              <Issues>
               <Issue Certainty="90" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>winHandle</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="IntPtrFieldsHavePrivateAccessLevel" />
              <Issues>
               <Issue Certainty="75" Level="CriticalError">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>winHandle</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Field>
          </Fields>
          <Methods>
           <Method Name="sendKey(System.String):System.Void">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>sendKey</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="toTextBox():Win32Dom.TextBox">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>toTextBox</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="LoadDomTree(System.Xml.XmlElement,System.IntPtr):System.Void">
            <Messages>
             <Message ID="System.Int32.ToString" Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="IFormatProviderShouldBePassed" />
              <Issues>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Int32.ToString()</Item>
                   <Item>Int32.ToString(IFormatProvider provider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Int32.ToString()</Item>
                   <Item>Int32.ToString(IFormatProvider provider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Int32.ToString()</Item>
                   <Item>Int32.ToString(IFormatProvider provider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Int32.ToString()</Item>
                   <Item>Int32.ToString(IFormatProvider provider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
             <Message ID="System.Int32.ToString(System.String)" Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="IFormatProviderShouldBePassed" />
              <Issues>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Int32.ToString(String format)</Item>
                   <Item>Int32.ToString(String format, IFormatProvider provider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="toButton():Win32Dom.Button">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>toButton</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="findWindow(System.String):Win32Dom.Window">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>findWindow</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
             <Message ID="System.Int32.Parse(System.String)" Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="IFormatProviderShouldBePassed" />
              <Issues>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Int32.Parse(String s)</Item>
                   <Item>Int32.Parse(String s, IFormatProvider provider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="toLabel():Win32Dom.Label">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>toLabel</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="close():System.Void">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>close</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="syncronizeDomTree():System.Void">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>syncronizeDomTree</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
             <Message ID="syncronize" Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesShouldBeSpelledCorrectly" />
              <Issues>
               <Issue Certainty="50" Level="CriticalWarning">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>syncronizeDomTree</Item>
                   <Item>syncronize</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="findWindowList(System.String):System.Collections.ArrayList">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>findWindowList</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
             <Message ID="System.Int32.Parse(System.String)" Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="IFormatProviderShouldBePassed" />
              <Issues>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Int32.Parse(String s)</Item>
                   <Item>Int32.Parse(String s, IFormatProvider provider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="getDomTree():System.String">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>getDomTree</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
             <Message ID="System.IO.StringWriter.#ctor" Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="IFormatProviderShouldBePassed" />
              <Issues>
               <Issue Certainty="95" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>StringWriter..ctor()</Item>
                   <Item>StringWriter..ctor(IFormatProvider formatProvider)</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
          </Methods>
          <Properties>
           <Property Name="left">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>left</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Property>
           <Property Name="top">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>top</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Property>
           <Property Name="width">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>width</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Property>
           <Property Name="height">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>height</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Property>
           <Property Name="winStyle">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>winStyle</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Property>
           <Property Name="className">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>className</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Property>
           <Property Name="text">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>text</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Property>
          </Properties>
         </Class>
         <Class Name="Desktoop">
          <Messages>
           <Message ID="Desktoop" Status="Active" Created="2005-02-21 05:18:57Z">
            <Rule TypeName="TypeNamesShouldBeSpelledCorrectly" />
            <Issues>
             <Issue Certainty="75" Level="CriticalWarning">
              <Resolution>
               <Data>
                <Items>
                 <Item>Desktoop</Item>
                 <Item>Desktoop</Item>
                </Items>
               </Data>
              </Resolution>
             </Issue>
            </Issues>
           </Message>
          </Messages>
          <Methods>
           <Method Name="findAllTopWindows():System.Collections.ArrayList">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>findAllTopWindows</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="findTopWindow(System.String):Win32Dom.Window">
            <Messages>
             <Message Status="Active" Created="2005-02-21 05:18:57Z">
              <Rule TypeName="MemberNamesArePascalCased" />
              <Issues>
               <Issue Certainty="99" Level="Error">
                <Resolution>
                 <Data>
                  <Items>
                   <Item>findTopWindow</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
          </Methods>
         </Class>
        </Classes>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldBeComVisibleAttributed">
    <Name>Assemblies should have the ComVisible attribute</Name>
    <Description>The ComVisible attribute indicates whether COM clients can use the library. Good design dictates that developers explicitly indicate COM visibility.</Description>
    <LongDescription>The default value for this attribute is 'true'. However, the best design is to mark the assembly ComVisible false, and then marking types, interfaces, and individual members as ComVisible true, as appropriate. For more information, see the Design Guidelines section titled Exposing Functionality to COM. </LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/DesignRules/AssembliesShouldHaveComVisibleAttribute.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75-99">CriticalError, Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="AvoidBuildingNonCallableCode">
    <Name>Avoid building non-callable code into assemblies</Name>
    <Description>There is code that appears to not be callable from a public or protected code path.</Description>
    <LongDescription>If this violation fires in error, please send a problem report to the FxCop team.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/Performance/UncallableCode.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="IFormatProviderShouldBePassed">
    <Name>IFormatProvider should be passed</Name>
    <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not.</Description>
    <LongDescription>Some methods in the common language runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/Globalization/IFormatProviderPassed.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="GlobalizationRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="IntPtrFieldsHavePrivateAccessLevel">
    <Name>Pointers are private fields</Name>
    <Description>IntPtr and UIntPtr fields should be declared as private. Exposing non-private pointers can cause a security weakness.</Description>
    <LongDescription />
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/SecurityRules/PointersArePrivate.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">CriticalError</MessageLevel>
    <File Name="SecurityRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="MemberNamesArePascalCased">
    <Name>Member names are Pascal-cased</Name>
    <Description>Use Pascal casing for all class, namespace, and member identifiers.</Description>
    <LongDescription>This convention capitalizes the first letter of each word, as in BackColor. Use Pascal casing for all public identifiers consisting of compound words.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/NamingRules/MemberNamesArePascalCased.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="99">Error</MessageLevel>
    <File Name="NamingRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="MemberNamesShouldBeSpelledCorrectly">
    <Name>Member names should consist of correctly spelled words</Name>
    <Description>The individual words that make up a member name should not be abbreviated and should be spelled correctly.</Description>
    <LongDescription>If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/UsageRules/MemberSpelling.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="50">CriticalWarning</MessageLevel>
    <File Name="UsageRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="TypeNamesShouldBeSpelledCorrectly">
    <Name>Type names should consist of correctly spelled words</Name>
    <Description>The individual words that make up a type name should not be abbreviated and should be spelled correctly.</Description>
    <LongDescription>If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/UsageRules/TypeSpelling.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
    <File Name="UsageRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="TypesAllocatingUnmanagedResourcesImplementIDisposable">
    <Name>Types that allocate unmanaged resources implement IDisposable</Name>
    <Description>Types that allocate unmanaged resources should implement IDisposable to allow callers to release those resources on demand.</Description>
    <LongDescription> Failure to implement IDisposable can result in unmanaged resources being unavailable or underutilized.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/DesignRules/TypesAllocatingUnmanagedResources.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="50">CriticalError</MessageLevel>
    <File Name="DesignRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="TypesDoNotHavePublicInstanceFields">
    <Name>Types do not have externally visible instance fields</Name>
    <Description>Public or protected instance fields limit your ability to change the implementation details for those data items.</Description>
    <LongDescription>Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the  implementation details of the underlying data.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/DesignRules/TypesDoNotHavePublicInstanceFields.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="90">Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.30.0.0" />
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
